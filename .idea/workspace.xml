<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e799bc06-1983-4006-979f-92eb8ec3eac0" name="Changes" comment="added printAgreement to the test decorator; added in sixth test from docs; made sure to check the preDiscountAmount, discountAmount and the finalCharge for all the test cases.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/RentalAgreement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/RentalAgreement.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/SQL.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/SQL.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/data/Charge.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/data/Charge.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/data/Holidays.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/data/Tool.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/data/Tool.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;mgodfreyyoung&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/mgodfreyyoung/my0417.git&quot;,
    &quot;accountId&quot;: &quot;f7dace08-2521-4863-899e-ed52de6578c9&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$USER_HOME$/Library/Java/JavaVirtualMachines/openjdk-22/Contents/Home/lib/src.zip!/java.sql/java/sql/Statement.java" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2fFFnNjgAv32Dz965btdTghPv2s" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.Main.executor": "Run",
    "Downloaded.Files.Path.Enabled": "false",
    "JUnit.CheckOutTest.executor": "Run",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "rentalAgreement",
    "kotlin-language-version-configured": "true",
    "project.structure.last.edited": "Libraries",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "editor.preferences.fonts.default"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="CheckOutTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="InventorySystem" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="CheckOutTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.CheckOutTest" />
        <item itemvalue="JUnit.CheckOutTest" />
        <item itemvalue="JUnit.CheckOutTest" />
        <item itemvalue="JUnit.CheckOutTest" />
        <item itemvalue="JUnit.CheckOutTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e799bc06-1983-4006-979f-92eb8ec3eac0" name="Changes" comment="" />
      <created>1713389084508</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1713389084508</updated>
    </task>
    <task id="LOCAL-00001" summary="added in Tool data which will have the code type and brand of our different tools and also the Charge class which tells how much the tool charge is and if it is free if weekday, weekend, or holidays.  Also added a charge class instance to our tool data since each tool with have to have charges associated with it.">
      <option name="closed" value="true" />
      <created>1713391308351</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1713391308351</updated>
    </task>
    <task id="LOCAL-00002" summary="changed the vars inside of Tool data class to be final since I do not think these values will every change onces the tool instance is created.">
      <option name="closed" value="true" />
      <created>1713392918357</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1713392918357</updated>
    </task>
    <task id="LOCAL-00003" summary="added the checkout class with a constructor that takes the needed parameters for the checkout process.">
      <option name="closed" value="true" />
      <created>1713397943882</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1713397943882</updated>
    </task>
    <task id="LOCAL-00004" summary="removed unneeded imports">
      <option name="closed" value="true" />
      <created>1713398019036</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1713398019036</updated>
    </task>
    <task id="LOCAL-00005" summary="added in the validateRentalDayCount which makes sure that the rental day count is at least one or greater, Currently just throwing this back up to the caller in the constructor and letting it print the error message out to console.">
      <option name="closed" value="true" />
      <created>1713399551514</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1713399551514</updated>
    </task>
    <task id="LOCAL-00006" summary="extended error message a bit for clarity.">
      <option name="closed" value="true" />
      <created>1713399623166</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1713399623166</updated>
    </task>
    <task id="LOCAL-00007" summary="added in the validateDiscountPercentage which throws an exception if the discount percentage is not in range of 0 to 100.">
      <option name="closed" value="true" />
      <created>1713400410805</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1713400410805</updated>
    </task>
    <task id="LOCAL-00008" summary="created sql branch, removed unused import">
      <option name="closed" value="true" />
      <created>1713457535699</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1713457535699</updated>
    </task>
    <task id="LOCAL-00009" summary="added the SQLite JDBC library - dependency erial.sqlite.jdbc">
      <option name="closed" value="true" />
      <created>1713458171854</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1713458171854</updated>
    </task>
    <task id="LOCAL-00010" summary="now creating the tool and charge database and populating with the sample data (will move this over to the test class at some point since we will end up only populating the test data in the junit test)">
      <option name="closed" value="true" />
      <created>1713471814880</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1713471814880</updated>
    </task>
    <task id="LOCAL-00011" summary="now using the java data classes to set up the SQL database inserts...less prone to issues then using parameters">
      <option name="closed" value="true" />
      <created>1713477948904</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1713477948904</updated>
    </task>
    <task id="LOCAL-00012" summary="lint fix">
      <option name="closed" value="true" />
      <created>1713477990651</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1713477990651</updated>
    </task>
    <task id="LOCAL-00013" summary="now checking if database exist before creating since we do not want to populate the database more than once.">
      <option name="closed" value="true" />
      <created>1713478724678</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1713478724678</updated>
    </task>
    <task id="LOCAL-00014" summary="created rental agreement branch">
      <option name="closed" value="true" />
      <created>1713479675505</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1713479675505</updated>
    </task>
    <task id="LOCAL-00015" summary="created the new RentalAgreement.java class, added in the constructor that takes the needed parameters; also created the createAgreement method in the checkout class and creating and returning the instance of the RentalAgreement. Started on CheckOutTest.java checkOutTestTwo so I can confirm the query works correctly.  using join to get the related Charge data">
      <option name="closed" value="true" />
      <created>1713490325623</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1713490325623</updated>
    </task>
    <task id="LOCAL-00016" summary="lint cleanup">
      <option name="closed" value="true" />
      <created>1713547143300</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1713547143300</updated>
    </task>
    <task id="LOCAL-00017" summary="added due date and calculating; added in test for the due data calculations;">
      <option name="closed" value="true" />
      <created>1713550599008</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1713550599008</updated>
    </task>
    <task id="LOCAL-00018" summary="created a separate method to query for tool and another to create the rental agreement (each function should perform one task)">
      <option name="closed" value="true" />
      <created>1713554349831</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1713554349831</updated>
    </task>
    <task id="LOCAL-00019" summary="realized the instructions say the discount percent should actually be a whole number so converted float to int; working on the calculateChargeDays.">
      <option name="closed" value="true" />
      <created>1713554947193</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1713554947193</updated>
    </task>
    <task id="LOCAL-00020" summary="converted calendar to LocalDate which has features that work better for this application (no concern for time as part of the date).  plus calendar makes it more difficult to calculate things like the number of days in range (things like the hour loss or gain of daylight savings has no impact on LocalDate.  also create methods to calculate number of rental days as well as removing labor day if it is between the range.">
      <option name="closed" value="true" />
      <created>1713567061427</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1713567061427</updated>
    </task>
    <task id="LOCAL-00021" summary="set up the july 4th exclude call; created lambda to avoid duplicated code for the calls to check for july 4ht and labor day; extended the CheckOutTest.java and checkOutTestTwo to confirm that the number of charge days excludes july 4th for the test case">
      <option name="closed" value="true" />
      <created>1713638373751</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1713638373751</updated>
    </task>
    <task id="LOCAL-00022" summary="now getting the number of weekend days and subtracting from charge days if the flag to not charge on weekends is set.">
      <option name="closed" value="true" />
      <created>1713656219607</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1713656219607</updated>
    </task>
    <task id="LOCAL-00023" summary="now that we know the number of weekend days it is easy to derive the number of week days so we can exclude them if the flag is set in the record.">
      <option name="closed" value="true" />
      <created>1713657519201</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1713657519202</updated>
    </task>
    <task id="LOCAL-00024" summary="added in 5th unit test; made sure to not deduct from rental days again if holiday falls on weekend and weekends are excluded and same for the weekday excludes.">
      <option name="closed" value="true" />
      <created>1713722382217</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1713722382217</updated>
    </task>
    <task id="LOCAL-00025" summary="calculating the pre-discount charge, the discount amount, and final charge; added a test decorator for RentalAgreement class and made all member vars private to preserve encapsulation; added method to print rental agreement using a string builder.">
      <option name="closed" value="true" />
      <created>1713738460735</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1713738460735</updated>
    </task>
    <task id="LOCAL-00026" summary="added printAgreement to the test decorator; added in sixth test from docs; made sure to check the preDiscountAmount, discountAmount and the finalCharge for all the test cases.">
      <option name="closed" value="true" />
      <created>1713743959168</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1713743959168</updated>
    </task>
    <option name="localTasksCounter" value="27" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="changed the vars inside of Tool data class to be final since I do not think these values will every change onces the tool instance is created." />
    <MESSAGE value="added the checkout class with a constructor that takes the needed parameters for the checkout process." />
    <MESSAGE value="removed unneeded imports" />
    <MESSAGE value="added in the validateRentalDayCount which makes sure that the rental day count is at least one or greater, Currently just throwing this back up to the caller in the constructor and letting it print the error message out to console." />
    <MESSAGE value="extended error message a bit for clarity." />
    <MESSAGE value="added in the validateDiscountPercentage which throws an exception if the discount percentage is not in range of 0 to 100." />
    <MESSAGE value="created sql branch, removed unused import" />
    <MESSAGE value="added the SQLite JDBC library - dependency erial.sqlite.jdbc" />
    <MESSAGE value="now creating the tool and charge database and populating with the sample data (will move this over to the test class at some point since we will end up only populating the test data in the junit test)" />
    <MESSAGE value="now using the java data classes to set up the SQL database inserts...less prone to issues then using parameters" />
    <MESSAGE value="lint fix" />
    <MESSAGE value="now checking if database exist before creating since we do not want to populate the database more than once." />
    <MESSAGE value="created rental agreement branch" />
    <MESSAGE value="created the new RentalAgreement.java class, added in the constructor that takes the needed parameters; also created the createAgreement method in the checkout class and creating and returning the instance of the RentalAgreement. Started on CheckOutTest.java checkOutTestTwo so I can confirm the query works correctly.  using join to get the related Charge data" />
    <MESSAGE value="lint cleanup" />
    <MESSAGE value="added due date and calculating; added in test for the due data calculations;" />
    <MESSAGE value="created a separate method to query for tool and another to create the rental agreement (each function should perform one task)" />
    <MESSAGE value="realized the instructions say the discount percent should actually be a whole number so converted float to int; working on the calculateChargeDays." />
    <MESSAGE value="converted calendar to LocalDate which has features that work better for this application (no concern for time as part of the date).  plus calendar makes it more difficult to calculate things like the number of days in range (things like the hour loss or gain of daylight savings has no impact on LocalDate.  also create methods to calculate number of rental days as well as removing labor day if it is between the range." />
    <MESSAGE value="set up the july 4th exclude call; created lambda to avoid duplicated code for the calls to check for july 4ht and labor day; extended the CheckOutTest.java and checkOutTestTwo to confirm that the number of charge days excludes july 4th for the test case" />
    <MESSAGE value="now getting the number of weekend days and subtracting from charge days if the flag to not charge on weekends is set." />
    <MESSAGE value="now that we know the number of weekend days it is easy to derive the number of week days so we can exclude them if the flag is set in the record." />
    <MESSAGE value="added in 5th unit test; made sure to not deduct from rental days again if holiday falls on weekend and weekends are excluded and same for the weekday excludes." />
    <MESSAGE value="calculating the pre-discount charge, the discount amount, and final charge; added a test decorator for RentalAgreement class and made all member vars private to preserve encapsulation; added method to print rental agreement using a string builder." />
    <MESSAGE value="added printAgreement to the test decorator; added in sixth test from docs; made sure to check the preDiscountAmount, discountAmount and the finalCharge for all the test cases." />
    <option name="LAST_COMMIT_MESSAGE" value="added printAgreement to the test decorator; added in sixth test from docs; made sure to check the preDiscountAmount, discountAmount and the finalCharge for all the test cases." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/Main.java</url>
          <line>5</line>
          <option name="timeStamp" value="13" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/SQL.java</url>
          <line>30</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/RentalAgreement.java</url>
          <line>60</line>
          <option name="timeStamp" value="58" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/tests/CheckOutTest.java</url>
          <line>57</line>
          <option name="timeStamp" value="59" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/RentalAgreement.java</url>
          <line>44</line>
          <option name="timeStamp" value="62" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>